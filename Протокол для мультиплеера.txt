# Протокол для мультиплеерной игры
## Создание комнат
* Попросить клиента по HTTP отправить особое сообщение, отловить Куки и записать токен в объект клиента сокета (для идентификации клиента)
* Запрос на создание комнаты отправляется уже через сокет (возвращается номер комнаты)
* Запрос на вхождение в комнату отправляется тоже через сокет
* После запроса на создание на сервере создаётся объект комнаты
## Процесс игры
* Каждое сообщение идентифицируется
* Состояние победы просчитывается также на сервере (попробовать битовые маски)
## Чат
* Каждое сообщение идентифицируется

В квадратных скобках обозначена степень реализации функции

TODO:
Дополнить интерфейс страницы с игрой информацией о противнике (необязательно)

	#Синтаксис игрового запроса:
[+] Room <приватная ли>   ; Запрос на создание комнаты
[+] Enter <номер комнаты>   ; Запрос на вход в комнату по приглашению
[+] Enter   ; Запрос на вход в случайную публичную комнату
[+] HTTP://GetMe   ; Запрос на информацию о себе (имя и счёт)

[-] Chat <сообщение>   ; Выводит в чат комнаты сообщение
[+] Diff <название уровня сложности>   ; Выбор уровня сложности (только создателем комнаты)
[+] Turn <номер клетки>   ; Отправляет противнику номер хода
[+] WhoTurn   ; Запрашивает, кто сейчас ходит (запускается только раз, при входе в комнату; определяет первого игрока)

	#Синтаксис игрового ответа:
[+] ClientID <код подтверждения>   ; Просит клиента отправить по HTTP пришедший код (для идентификации)

[+] Room <номер комнаты>   ; Номер созданной комнаты
[+] Enter <рейтинг игрока> <имя игрока>   ; Сообщает, что игрок вошёл в комнату (Грубо говоря, предоставляет инфу о противнике)
; ^^^_Разрешает начать игру (первым ходит создатель, потом проигравший)
[+] Exit   ; Сообщает, что игрок вышел из комнаты.

[-] Chat <тект сообщения>   ; Сообщение другого игрока
[+] Diff <название уровня сложности>   ; Выбирает у второго игрока уровень сложности
[+] Turn <номер клетки>   ; Номер хода противника
[+] Err <текст ошибки>   ; Ошибка
[+] WhoTurn <true, если запросивший>   ; Говорит, кто сейчас ходит

[-] Win <рейтинг создателя комнаты> <рейтинг вошедшего игрока>   ; Показывает при победе новый рейтинг игроков


	#Реализация комнат:
	##1
комната: игрок1, игрок2
игрок1: комната
игрок2: комната
// Проблемы: утечка памяти (проверить при нагрузке)
	##2
игрок1: игрок2 (противник)
игрок2: игрок1 (противник)
// Проблемы: неочевидность

Примечание: проект доводился до приемлемого состояния в спешке, а этот протокол писался в спешке. Простите за все баги, но дорабатывать я его не собираюсь (проще будет переписать).